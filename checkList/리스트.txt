-----------------리스트내에서 최소값,최대값---------------
l=[4,5,2,3,5]
print(min(l))
print(max(l))
-----------------------------------------------------
리스트 덧셈
l=[1,2,3]+[4]
-> l=[1,2,3,4]
-----------------------------------------------------
범위 초과 출력
l=[1,2,3]
print(l[1,10])
-> [2,3] //범위내까지만 출력해줌
-----------------------------------------------------
a='1234'일때
print(list(a)) -> ['1','2','3','4']
a=1234일때
print(list(a)) 에러

------------------------------------------------------
insert,append //추가
del(arr[인덱스]), remove(값), pop()-끝에 반환 후 삭제 // 삭제
pop(), pop(인덱스), del li[인덱스] // pop()은 O(1), pop(인덱스는)과 del은 삭제 후 땡겨야하므로 O(N)
그래서 앞에 원소 삭제할때는 덱을 사용하는게 좋다.
-------------------------------------------------------
리스트 empty인지 확인
if not 리스트명:
    print("list is empty")
원소 있는지 확인
if 리스트명:
    print("list is not empty"
len으로 리스트 비었는지확인은 권장 X
---------------------------------------------------------
str과 list join
s="list"
li=list(s)           //['l','i','s','t']
str=''.join(li)      //list
str=' '.join(li)     //l i s t
str='_'.join(li)     //l_i_s_t

만일 리스트에 문자아닌게 있으면 type에러 뜸
---------------------------------------------------------
a=[0]*3         /////[0,0,0]
b=[[0]*3]       /////[[0,0,0]]

----------------------------------------------------------
정렬
li=[1,2,5,3]
li.reverse() //[3,5,2,1]    역순
li.sort(reverse=True) //[5,3,2,1]  내림차순


list
li=['aaa','bb','cccc']
li.insert(0,'z') // ['z','aaa','bb','cccc']

-----------------------------sort(key, reverse)------------------------------------
li.sort(key=lambda x: len(x))
//['z','bb','aaa','cccc']
li.sort(key=lambda x: len(x),reverse=True)
//['cccc','aaa','bb','z']
li.sort(key=lambda x:(len(x),x)) // 길이 우선 정렬, 그다음은 문자열

key값으로 lambda x: x[1],reverse=True) 이런식으로도 가능
O(NlogN)
-----------------------------reverse()-----------------------------------------------
li=['aaa','bb','cccc']
li.reverse() //['cccc','bb','aaa']
정렬이 아니라 단순히 역순이다.
O(N)
-----------------------------index(찾을값,시작값,끝값)-------------------------------------------
li=[3,1,2,3]
print(li.index(3)) // 0
print(li.index(3)) // 0 그냥 제일 앞에꺼 찾는다
print(li.index(5) // error 없는거 찾으면 에러
O(1)
-----------------------------remove(삭제할 값)----------------------------------------
li=[3,1,2,3]
li.remove(3) // [1,2,3]
li.remove(2) // [1,3]
li.remove(5) // error 없는거 삭제하면 에러
O(N)
-----------------------------pop(인덱스)-----------------------------------------------
li=['a','b,',c','d']
li.pop() //['a','b','c']
li.pop(1) //['a','c']
li.pop(5) //error 인덱스 벗어나면 그냥 오류임
O(N)
----------------------------count(값)----------------------------------------------------
li=[1,2,3,1,1]
print(li.count(1)) //3
print(li.count(5) //0
O(N)
----------------------------extend(iterable한 값)---------------------------------------
li=[1,2]
eli=[3,4]
li.append(eli) //[1,2,[3,4]]
li.extend(eli) //[1,2,3,4]  이터러블하게 넣어버림
O(len(요소길이))
------------------------------복사-----------------------------------------
li=temp[:] 로하기
li=temp  //얕은복사임
--------------------------clear------------------------------
O(1)
--------------------------len-------------------------------
O(1)

