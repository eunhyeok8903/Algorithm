append의 시간 복잡도는 O(1)인 반면에
insert의 시간 복잡도는 O(N)이다

이러한 점에서 봤을때
remove의 시간복잡도도 O(N)이다
pop()의 시간복잡도는 O(1)
del li[i], li.pop(1) -> O(N) 왜냐하면 삭제하고 땡겨야하므로

---------------------------------------------------------------------------------------------------------
리스트와 딕셔너리 내장함수 시간복잡도 정리
https://wayhome25.github.io/python/2017/06/14/time-complexity/

의외였던점
-len()은 O(1)
-list의 del, dictionary의 del 은 각각 O(N),O(1)
-딕셔너리는 거의다 O(1)
-list 곱셈은 li*횟수 -> O(리스트길이*횟수) 계산되어지는 리스트의 총길이
